{
  "name": "AI Agent Farm - Health Monitoring & Alerts",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 30
            }
          ]
        }
      },
      "id": "1",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:8000/health",
        "options": {
          "timeout": 10000
        }
      },
      "id": "2", 
      "name": "Health Check API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.status }}",
              "rightValue": "healthy",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3",
      "name": "Check Health Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "chatId": "YOUR_TELEGRAM_CHAT_ID",
        "text": "‚úÖ AI Agent Farm Health Check - All Systems Operational\n\nüïê Time: {{ $now.format('yyyy-MM-dd HH:mm:ss') }}\nüåê API Status: {{ $('Health Check API').item.json.status }}\nüß† Components: {{ Object.keys($('Health Check API').item.json.components).join(', ') }}\nüìä Version: {{ $('Health Check API').item.json.version }}\n\nüîó Dashboard: http://localhost:3000\nüìñ API Docs: http://localhost:8000/docs",
        "additionalFields": {}
      },
      "id": "4",
      "name": "Send Success Alert",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        900,
        200
      ],
      "credentials": {
        "telegramApi": {
          "id": "1",
          "name": "Telegram Bot Credentials"
        }
      }
    },
    {
      "parameters": {
        "chatId": "YOUR_TELEGRAM_CHAT_ID", 
        "text": "üö® ALARM! AI Agent Farm System Alert\n\n‚ùå API Health Check Failed\nüïê Time: {{ $now.format('yyyy-MM-dd HH:mm:ss') }}\n\n‚ö†Ô∏è Status: API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É\nüîß Action Required: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–∏—Å—Ç–µ–º—ã\n\nüìä Grafana: http://localhost:3000\nüê≥ Docker: docker compose logs api\n\n#AlertCritical #AIAgentFarm",
        "additionalFields": {
          "disable_notification": false
        }
      },
      "id": "5",
      "name": "Send Failure Alert",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        900,
        400
      ],
      "credentials": {
        "telegramApi": {
          "id": "1",
          "name": "Telegram Bot Credentials"
        }
      }
    },
    {
      "parameters": {
        "url": "http://localhost:8000/tasks",
        "options": {}
      },
      "id": "6",
      "name": "Get Active Tasks",
      "type": "n8n-nodes-base.httpRequest", 
      "typeVersion": 4.1,
      "position": [
        1120,
        200
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $json.total_active }}",
              "rightValue": 10,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7",
      "name": "Check Task Load",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1340,
        200
      ]
    },
    {
      "parameters": {
        "chatId": "YOUR_TELEGRAM_CHAT_ID",
        "text": "‚ö†Ô∏è AI Agent Farm - High Task Load Warning\n\nüìä Active Tasks: {{ $('Get Active Tasks').item.json.total_active }}\nüïê Time: {{ $now.format('yyyy-MM-dd HH:mm:ss') }}\n\nüìà System –ø–æ–¥ –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π\nüîß Consider scaling workers\n\n#HighLoad #Performance",
        "additionalFields": {}
      },
      "id": "8",
      "name": "Send Load Warning",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1560,
        120
      ],
      "credentials": {
        "telegramApi": {
          "id": "1", 
          "name": "Telegram Bot Credentials"
        }
      }
    },
    {
      "parameters": {
        "url": "http://localhost:3100/ready",
        "options": {
          "timeout": 5000
        }
      },
      "id": "9",
      "name": "Check Loki Health",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1340,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1", 
              "leftValue": "={{ $statusCode }}",
              "rightValue": 200,
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "10",
      "name": "Check Loki Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1560,
        400
      ]
    },
    {
      "parameters": {
        "chatId": "YOUR_TELEGRAM_CHAT_ID",
        "text": "üö® CRITICAL: Loki Logging Service Down\n\n‚ùå Loki –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç\nüïê Time: {{ $now.format('yyyy-MM-dd HH:mm:ss') }}\n\n‚ö†Ô∏è –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—Ä—É—à–µ–Ω–æ\nüîß Restart: docker compose -f docker-compose.logging.yml restart loki\n\n#CriticalAlert #LoggingDown",
        "additionalFields": {}
      },
      "id": "11",
      "name": "Send Loki Alert",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1780,
        320
      ],
      "credentials": {
        "telegramApi": {
          "id": "1",
          "name": "Telegram Bot Credentials"
        }
      }
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Health Check API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Health Check API": {
      "main": [
        [
          {
            "node": "Check Health Status", 
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Health Status": {
      "main": [
        [
          {
            "node": "Send Success Alert",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Active Tasks",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Failure Alert",
            "type": "main", 
            "index": 0
          }
        ]
      ]
    },
    "Get Active Tasks": {
      "main": [
        [
          {
            "node": "Check Task Load",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check Loki Health",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Task Load": {
      "main": [
        [
          {
            "node": "Send Load Warning",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Loki Health": {
      "main": [
        [
          {
            "node": "Check Loki Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Loki Status": {
      "main": [
        [],
        [
          {
            "node": "Send Loki Alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": false
  },
  "id": "monitoring-alerts",
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z", 
      "id": "1",
      "name": "monitoring"
    }
  ]
}
