# AI Agent Farm - Production with Full Monitoring
# ===============================================
# Complete production setup with integrated monitoring

version: '3.8'

services:
  # ðŸš€ AI Agent Farm Services
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - SERPER_API_KEY=${SERPER_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=false
      - LOG_LEVEL=INFO
    depends_on:
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        labels: "service=api,environment=production"
    restart: unless-stopped
    networks:
      - ai-farm-network
      - monitoring

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    command: celery -A app.tasks worker --loglevel=info --concurrency=2
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - SERPER_API_KEY=${SERPER_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=false
      - LOG_LEVEL=INFO
    depends_on:
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        labels: "service=worker,environment=production"
    restart: unless-stopped
    networks:
      - ai-farm-network
      - monitoring
    deploy:
      replicas: 2

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --maxmemory 512mb
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
        labels: "service=redis,environment=production"
    restart: unless-stopped
    networks:
      - ai-farm-network
      - monitoring
    volumes:
      - redis_data:/data

  # ðŸ“Š Monitoring Stack
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
      - ./logging/loki-config.yaml:/etc/loki/local-config.yaml
    networks:
      - monitoring
    restart: unless-stopped

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./logging/promtail-config.yaml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./logging/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./logging/grafana-dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./logging/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - loki
    networks:
      - monitoring
    restart: unless-stopped

volumes:
  redis_data:
  loki_data:
  grafana_data:

networks:
  ai-farm-network:
    driver: bridge
  monitoring:
    driver: bridge
